import * as React from "react"
import { PageProps, graphql, HeadFC } from "gatsby"
import { MDXRenderer } from "gatsby-plugin-mdx"
//import Highlight, { defaultProps } from "prism-react-renderer"

// Can be autogenerated
// https://github.com/cometkim/gatsby-plugin-typegen
type Props = {
  allMdx: {
    nodes: {id: string, body: string,frontmatter: {title: string}}[]
  }
}
//const component = {
//  pre: props => {
//    const className = props.children.props.className || '';
//    const matches = className.match(/language-(?<lang>.*)/);
//    return (
//      <Highlight
//        {...defaultProps}
//        code={props.children.props.children}
//        language={
//          matches && matches.groups && matches.groups.lang
//            ? matches.groups.lang
//            : ''
//        }
//      >
//        {({ className, style, tokens, getLineProps, getTokenProps }) => (
//          <pre className={className} style={style}>
//            {tokens.map((line, i) => (
//              <div {...getLineProps({ line, key: i })}>
//                {line.map((token, key) => (
//                  <span {...getTokenProps({ token, key })} />
//                ))}
//              </div>
//            ))}
//          </pre>
//        )}
//      </Highlight>
//    );
//  },
//};


const Layout: React.FC<{children: React.ReactNode}> = ({children}) => {
  return (
  <div className="bg-slate-200 flex align-center justify-center">
    <div className="p-10">
    {children}
    </div>
  </div>)
}
const AntiPatternsLogo = () => (
    <div className="flex items-center align-center font-sans text-[50px]">
      <div>Linguistic</div>
      <div className="-skew-x-[10deg] px-[12px] py-[5px] text-white bg-red-500 ml-[10px]">Antipatterns</div>
  </div>
  )

const IndexPage: React.FC<PageProps<Props>> = ({data}) => {
  return (
    <Layout>
      <AntiPatternsLogo />
      {data.allMdx.nodes.map((node) => (
      <article key={node.id}>
        <h2>{node.frontmatter.title}</h2>
        <div className="prose">
          <MDXRenderer >
            {node.body}
          </MDXRenderer>
        </div>
      </article>
      ))}
    </Layout>
  )
}

export default IndexPage


export const query = graphql`
query {
  allMdx {
    nodes {
      id
      body
      frontmatter {
        title	
      }
    }
  }
}
`

export const Head: HeadFC = () => <title>Home Page</title>
